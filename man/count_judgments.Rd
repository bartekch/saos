% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/count_judgments.R
\name{count_judgments}
\alias{count_judgments}
\title{Count number of results for a given search}
\usage{
count_judgments(all = NULL, legalBase = NULL, referencedRegulation = NULL,
  judgeName = NULL, caseNumber = NULL, courtType = NULL,
  ccCourtType = NULL, ccCourtId = NULL, ccCourtCode = NULL,
  ccCourtName = NULL, ccDivisionId = NULL, ccDivisionCode = NULL,
  ccDivisionName = NULL, scPersonnelType = NULL, scChamberId = NULL,
  scChamberName = NULL, scDivisionId = NULL, scDivisionName = NULL,
  judgmentTypes = NULL, keywords = NULL, judgmentDateFrom = NULL,
  judgmentDateTo = NULL, sortingField = "DATABASE_ID",
  sortingDirection = "ASC")
}
\arguments{
\item{all}{Character vector or a list, see "Query details" section. Search
everywhere for given phrase.}

\item{legalBase}{Character vector or a list, see "Query details" section.
Search for legal basis of judgments.}

\item{referencedRegulation}{Character vector or a list, see "Query details"
section. Search for regulations referenced in judgments.}

\item{judgeName}{Character. Search for name of any involved judge.}

\item{caseNumber}{Character. Search for judgments with given signature.}

\item{courtType}{Character, one from COMMON, SUPREME, ADMINISTRATIVE,
CONSTITUTIONAL_TRIBUNAL, NATIONAL_APPEAL_CHAMBER. Search for type of court.}

\item{ccCourtType}{Character, one from APPEAL, REGIONAL, DISTRICT. Search for
type of common court.}

\item{ccCourtId}{Positive integer. Search for the given common court ID.}

\item{ccCourtCode}{Character. Search for the given common court code.}

\item{ccCourtName}{Character. Search for the given common court name.}

\item{ccDivisionId}{Positive integer. Search for given common court division ID.}

\item{ccDivisionCode}{Character. Search for given common court division code.}

\item{ccDivisionName}{Character. Search for given common court division name.}

\item{scPersonnelType}{Character, one from ONE_PERSON, THREE_PERSON,
FIVE_PERSON, SEVEN_PERSON, ALL_COURT, ALL_CHAMBER, JOINED_CHAMBERS. Search
for supreme court judgment's personnel type.}

\item{scChamberId}{Positive integer. Search for supreme court chamber ID.}

\item{scChamberName}{Character. Search for supreme court chamber name.}

\item{scDivisionId}{Positive integer. Search for supreme court chamber division ID.}

\item{scDivisionName}{Character. Search for supreme court chamber division name.}

\item{judgmentTypes}{Character, one from DECISION, RESOLUTION, SENTENCE,
REGULATION, REASONS. Search for judgments type.}

\item{keywords}{Character. Search for keywords of judgments.}

\item{judgmentDateFrom}{Any date/time object that could be properly converted
with \code{as.POSIXct}, or a string in a format "\%Y-\%m-\%d".Represents
the earliest allowed judgment's date on the list.}

\item{judgmentDateTo}{Any date/time object that could be properly converted
with \code{as.POSIXct}, or a string in a format "\%Y-\%m-\%d".Represents
the latest allowed judgment's date on the list.}

\item{sortingField}{Character. Represents the field by which you want to sort a list
of items, one from: DATABASE_ID, JUDGMENT_DATE, CASE_NUMBER, CC_COURT_TYPE,
CC_COURT_ID, CC_COURT_CODE, CC_COURT_NAME, CC_COURT_DIVISION_ID,
CC_COURT_DIVISION_CODE, CC_COURT_DIVISION_NAME, SC_JUDGMENT_FORM,
SC_PERSONNEL_TYPE, SC_COURT_DIVISION_ID, SC_COURT_DIVISION_NAME,
SC_COURT_DIVISIONS_CHAMBER_ID, SC_COURT_DIVISIONS_CHAMBER_NAME.}

\item{sortingDirection}{Character, one from ASC, DESC. Indicates whether sort
  should be increasing or decreasing.}
}
\value{
the number of results (integer)
}
\description{
Count the number of results for a given search. Useful to check before
 attempting to download a huge number of records, which could be very
 memory and time consuming.
}
\section{Query details}{

All parameters are case insensitive.
A few parameters (\code{"all", "legalBase", "referencedRegulation"}) support
  advanced query parsing:
  \itemize{
  \item when query contains multiple words then search for judgments that
    contains all of that words, e. g. \code{"dobra osobiste"}
  \item operator "OR" - search for judgments that contains one of the words
    in a query, e.g. \code{"dobra OR osobiste"},
  \item quote - search for judgments that contains whole phrase,
    e.g. \code{"\\"dobra osobiste\\""},
  \item minus sign - search for judgments that doesn't contain this word,
    e.g. \code{"dobra -osobiste"}.
    }
 Operators could be freely mixed, e.g \code{"\"dobra osobiste\" OR -kodeks"}.
 Phrase \code{"word1 OR -word2"} is equivalent to \code{"word1 -word2"}.
 A parameter could be a character vector or a list with any of two fields:
 \code{include} and \code{exclude}, which have to be character vectors or
 \code{NULLs}. In former case elements of vector will be pasted with "OR"
 operator. In the latter elements of \code{include} field will be pasted
 with "OR" operator and elements of \code{exclude} field will be preceded
 with "-" operator (warning - every element will be treated as exact phrase,
 so if you want to include or exclude a few words independently, you need to
 use a single element for every word). For example
 \code{list(include = c("dobra osobiste", "kodeks karny"), exclude = "kodeks cywilny")}
  will turn to \code{"dobra osobiste OR kodeks karny -\\"kodeks cywilny\\""}.
}
\examples{
\donttest{
 count_judgments(judgmentDateFrom="2014-01-01")
 count_judgments(judgeName="Maria Tyszel", judgmentDateTo="2014-06-30")


 ## Examples of query operators, starting from most general query.

 # any of two words
 count_judgments(all = "dobra OR osobiste")

 # both words
 count_judgments(all = "dobra osobiste")

 # exactly given phrase
 count_judgments(all = "\\"dobra osobiste\\"")

 # one word but not the other
 count_judgments(all = "dobra -osobiste")
 count_judgments(all = "-dobra osobiste")


 ## Mixing operators
 # in one string
 count_judgments(all = "\\"dobra osobiste\\" -\\"dobra publiczne\\"")

 # as a list
 count_judgments(all = list(include = "dobra osobiste",
                            exclude = "dobra publiczne"))
  }
}
\seealso{
\code{\link[saos]{search_judgments}}
}

